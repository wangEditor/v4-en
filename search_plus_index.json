{"./":{"url":"./","title":"Introduction","keywords":"","body":"wangEditor document English document Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/":{"url":"pages/01-get started/","title":"Get Started","keywords":"","body":"Get started Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/01-BasicUsage.html":{"url":"pages/01-get started/01-BasicUsage.html","title":"BasicUsage","keywords":"","body":"Basic usage Download npm npm i wangeditor --save CDN https://unpkg.com/wangeditor/dist/wangEditor.min.js CDN example weblcome use wangEditor richEditor const E = window.wangEditor const editor = new E('#div1') // or const editor = new E( document.getElementById('div1') ) editor.create() Npm example import E from 'wangeditor' const editor = new E('#div1') // or const editor = new E( document.getElementById('div1') ) editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/02-editHight.html":{"url":"pages/01-get started/02-editHight.html","title":"EditHight","keywords":"","body":"Editing area height the default height of editing area is 300px but you can set it by editor.config.height. const editor = new E('#div1') // set editing area height to 500px editor.config.height = 500 // notice，you sholud set height before using create() editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/03-splitMenusAndArea.html":{"url":"pages/01-get started/03-splitMenusAndArea.html","title":"SplitMenusAndArea","keywords":"","body":"Split menus and editing area Toolbar and editing area can be separated(in wangEditor just like Zhihu and so on). If that,Toolbar and editing area can controlle element respectively, that can custom styles. for example: fixed menu、auto add editing area height and so on. .toolbar { border: 1px solid #ccc; } .text { border: 1px solid #ccc; min-height: 400px; } container and toolbar split ------ split line ------ const E = window.wangEditor const editor = new E('#toolbar-container', '#text-container') // transfer two element editor.create() see upper code , menu and editing area is two div, position and size can set as whatever you want. Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/04-textarea.html":{"url":"pages/01-get started/04-textarea.html","title":"Textarea","keywords":"","body":"Use textarea wangEditor no support textarea ,but you can use onchange come true submit rich text content from textarea webcomle use wangEditor rich text editor const E = window.wangEditor const editor = new E('#div1') const $text1 = $('#text1') editor.config.onchange = function (html) { // step two，observe change, sync update to textarea $text1.val(html) } editor.create() // frist，init textarea value $text1.val(editor.txt.html()) Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/05-multipleEditor.html":{"url":"pages/01-get started/05-multipleEditor.html","title":"MultipleEditor","keywords":"","body":"multiple editor on one web page wangEditor can create multiple editor on one web page .toolbar { background-color: #f1f1f1; border: 1px solid #ccc; } .text { border: 1px solid #ccc; height: 200px; } split section first demo（menus and editing area split） second demo（noraml） const E = window.wangEditor const editor1 = new E('#div1', '#div2') editor1.create() const editor2 = new E('#div3') editor2.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/06-Zindex.html":{"url":"pages/01-get started/06-Zindex.html","title":"Zindex","keywords":"","body":"Setting z-index editor z-index default value is 1000 ,you can set as whatever you want. const editor = new E('#div1') editor.config.zIndex = 500 editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/07-placeholder.html":{"url":"pages/01-get started/07-placeholder.html","title":"Placeholder","keywords":"","body":"Placeholder you can use editor.config.placeholder change placeholder text. const editor = new E('#div1') editor.config.placeholder = 'custom placeholder txt' // editor.config.placeholder = '' // if you not use placeholder, you can get placehoder a empty string editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/08-autoFocus.html":{"url":"pages/01-get started/08-autoFocus.html","title":"AutoFocus","keywords":"","body":"Auto focus The editing area will be focused by default When initializing. you can cancel auto focus access to follow operate. const editor = new E('#div1') // cancel auto focus editor.config.focus = false editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-get started/09-customAlert.html":{"url":"pages/01-get started/09-customAlert.html","title":"CustomAlert","keywords":"","body":"Custom alert customAlert can deal global alert, default option is window.alert. if you feel browser in-built alert no good, you can custom alert , that be easy unify alert style. import { message } from 'antd'; const editor = new E('#div1') // take Ant Design as an example editor.config.customAlert = function (s, t) { switch (t) { case 'success': message.success(s) break case 'info': message.info(s) break case 'warning': message.warning(s) break case 'error': message.error(s)cus break default: message.info(s) break } } editor.create() Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-xxx/":{"url":"pages/01-xxx/","title":"Xxx","keywords":"","body":"xxx Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-xxx/01-a.html":{"url":"pages/01-xxx/01-a.html","title":"A","keywords":"","body":"a Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/01-xxx/02-b.html":{"url":"pages/01-xxx/02-b.html","title":"B","keywords":"","body":"b Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/02-yyy/":{"url":"pages/02-yyy/","title":"Yyy","keywords":"","body":"yyy Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/02-yyy/01-c.html":{"url":"pages/02-yyy/01-c.html","title":"C","keywords":"","body":"c Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "},"pages/02-yyy/02-d.html":{"url":"pages/02-yyy/02-d.html","title":"D","keywords":"","body":"d Copyright © wangEditor (2020 - present) all right reserved，powered by GitbookFile Modify: 2020-12-26 09:45:22 "}}